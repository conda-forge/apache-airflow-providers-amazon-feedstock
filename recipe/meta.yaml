{% set name = "apache-airflow-providers-amazon" %}
{% set version = "9.7.0" %}

package:
  name: {{ name }}-split
  version: {{ version }}

source:
  url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/apache_airflow_providers_amazon-{{ version }}.tar.gz
  sha256: 85c91b6f1724ea1268be7d3d4081c8ea065c63b16bdcc4168097b9c0720e59ba

build:
  noarch: python
  number: 0

outputs:
  - name: {{ name }}
    script: install_airflow_providers_amazon.sh
    build:
      noarch: python

    requirements:
      host:
        - python {{ python_min }}
        - flit-core ==3.12.0
        - pip
      run:
        - python >={{ python_min }}
        - apache-airflow >=2.10.0
        - apache-airflow-providers-common-compat >=1.6.1
        - apache-airflow-providers-common-sql >=1.27.0
        - apache-airflow-providers-http
        - boto3 >=1.37.0
        - botocore >=1.37.0
        - inflection >=0.5.1
        - watchtower >=3.3.1,<4
        - jsonpath-ng >=1.5.3
        - redshift_connector >=2.1.3
        - asgiref >=2.3.0
        - pyathena >=3.10.0
        - jmespath >=0.7.0
        - python3-saml >=1.16.0
        - xmlsec !=1.3.15,>=1.3.14
        - lxml <5.4.0,>=5.3.2
        - sagemaker-studio >=1.0.9
        - marshmallow>=3

    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-aiobotocore
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - aiobotocore >=2.21.1
        # from aiobotocore[boto3]
        - boto3 <1.37.2,>=1.37.0
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-cncf-kubernetes
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-cncf-kubernetes >=7.2.0
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-s3fs
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - s3fs >=2023.10.0
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-python3-saml
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - python3-saml >=1.16.0
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-apache-hive
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-apache-hive
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-exasol
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-exasol
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-fab
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-fab
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-ftp
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-ftp
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-google
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-google
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-imap
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-imap
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-microsoft-azure
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-microsoft-azure
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-mongo
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-mongo
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-openlineage
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-openlineage >=2.3.0
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-salesforce
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-salesforce
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-ssh
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-ssh
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-standard
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-standard
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

  - name: {{ name }}-with-common-messaging
    build:
      noarch: python
    requirements:
      host:
        - python {{ python_min }}
      run:
        - python >={{ python_min }}
        - {{ pin_subpackage(name, max_pin='x.x.x.x.x.x') }}
        - apache-airflow-providers-common-messaging >=1.0.1
    test:
      imports:
        - airflow.providers.amazon
      commands:
        - pip check
      requires:
        - python {{ python_min }}
        - pip

about:
  home: https://airflow.apache.org/
  summary: Provider package apache-airflow-providers-amazon for Apache Airflow
  license: Apache-2.0
  license_file: src/airflow/providers/amazon/LICENSE
  license_family: Apache
  doc_url: https://airflow.apache.org/docs/apache-airflow-providers-amazon/stable/index.html
  dev_url: https://github.com/apache/airflow/

extra:
  recipe-maintainers:
    - xylar
